---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: cloudflare-letsencrypt
  namespace: kube-system
spec:
  acme:
    # server: https://acme-v02.api.letsencrypt.org/directory # prod env
    server: https://acme-staging-v02.api.letsencrypt.org/directory # staging env
    email: fra.lombardo92@gmail.com
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: cloudflare-letsencrypt-key
    solvers:
      - selector: {}
        dns01:
          cloudflare:
            email: fra.lombardo92@gmail.com
            apiTokenSecretRef:
              name: cloudflare
              key: api-token
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: francesco-lombardo-it-cert
  namespace: kube-system
spec:
  secretName: francesco-lombardo-it-tls
  dnsNames:
    - "francesco-lombardo.it"
    - "*.francesco-lombardo.it"
  issuerRef:
    name: cloudflare-letsencrypt
    kind: Issuer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: daniel-e-luana-sposi-it-cert
  namespace: kube-system
spec:
  secretName: daniel-e-luana-sposi-it-tls
  dnsNames:
    - "daniel-e-luana-sposi.it"
    - "*.daniel-e-luana-sposi.it"
  issuerRef:
    name: cloudflare-letsencrypt
    kind: Issuer
---
apiVersion: helm.cattle.io/v1
kind: HelmChartConfig
metadata:
  name: traefik
  namespace: kube-system
spec:
  valuesContent: |-
    tlsStore:
      default:
        certificates:
        - secretName: francesco-lombardo-it-tls
        - secretName: daniel-e-luana-sposi-it-tls
        defaultCertificate:
          secretName: francesco-lombardo-it-tls
    logs:
      general:
        level: DEBUG
      access:
        enabled: true
        filters:
          statuscodes: "200,300-302"
          retryattempts: true
          minduration: 10ms

    ports:
      web:
        redirectTo:
          port: websecure
      traefik:
        expose: true
    # Create an IngressRoute for the dashboard
    ingressRoute:
      dashboard:
        enabled: true
        # Custom match rule with host domain
        matchRule: PathPrefix(`/api`, `/dashboard`)
        entryPoints: ["traefik"]
    extraObjects:
    - apiVersion: traefik.io/v1alpha1
      kind: Middleware
      metadata:
        name: redirect-non-www-to-www
      spec:
        redirectRegex:
          permanent: true
          regex: "^(https?)://(?:www\\.)?(.+)$"
          replacement: "${1}://www.${2}"
    providers:
      kubernetesCRD:
        enabled: true
        allowCrossNamespace: true
